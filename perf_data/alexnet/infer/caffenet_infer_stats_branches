#           time             counts unit events
     0.100349680            613,356      branch-misses:u          
     0.100349680         43,363,538      branches:u               
     0.200526143          1,050,635      branch-misses:u          
     0.200526143         66,457,517      branches:u               
     0.300658659          1,941,531      branch-misses:u          
     0.300658659         92,911,801      branches:u               
     0.400792641          2,046,024      branch-misses:u          
     0.400792641         82,153,984      branches:u               
     0.500951270          2,952,804      branch-misses:u          
     0.500951270        113,341,154      branches:u               
     0.601124587          1,353,684      branch-misses:u          
     0.601124587        107,047,865      branches:u               
WARNING: Logging before InitGoogleLogging() is written to STDERR
W0509 16:01:31.750819 118508 _caffe.cpp:139] DEPRECATION WARNING - deprecated use of Python interface
W0509 16:01:31.750843 118508 _caffe.cpp:140] Use this instead (with the named "weights" parameter):
W0509 16:01:31.750845 118508 _caffe.cpp:142] Net('models/bvlc_reference_caffenet/deploy.prototxt', 1, weights='models/bvlc_reference_caffenet/caffenet_train_iter_27.caffemodel')
I0509 16:01:31.752279 118508 net.cpp:51] Initializing net from parameters: 
name: "CaffeNet"
state {
  phase: TEST
  level: 0
}
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 10
      dim: 3
      dim: 227
      dim: 227
    }
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  inner_product_param {
    num_output: 1000
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8"
  top: "prob"
}
I0509 16:01:31.752388 118508 layer_factory.hpp:77] Creating layer data
I0509 16:01:31.752398 118508 net.cpp:84] Creating Layer data
I0509 16:01:31.752403 118508 net.cpp:380] data -> data
I0509 16:01:31.752420 118508 net.cpp:122] Setting up data
I0509 16:01:31.752427 118508 net.cpp:129] Top shape: 10 3 227 227 (1545870)
I0509 16:01:31.752430 118508 net.cpp:137] Memory required for data: 6183480
I0509 16:01:31.752434 118508 layer_factory.hpp:77] Creating layer conv1
I0509 16:01:31.752440 118508 net.cpp:84] Creating Layer conv1
I0509 16:01:31.752444 118508 net.cpp:406] conv1 <- data
I0509 16:01:31.752449 118508 net.cpp:380] conv1 -> conv1
I0509 16:01:31.752456 118508 base_conv_layer.cpp:121] Group is 1channel is3number of output is 96
I0509 16:01:31.752532 118508 net.cpp:122] Setting up conv1
I0509 16:01:31.752537 118508 net.cpp:129] Top shape: 10 96 55 55 (2904000)
I0509 16:01:31.752540 118508 net.cpp:137] Memory required for data: 17799480
I0509 16:01:31.752548 118508 layer_factory.hpp:77] Creating layer relu1
I0509 16:01:31.752554 118508 net.cpp:84] Creating Layer relu1
I0509 16:01:31.752557 118508 net.cpp:406] relu1 <- conv1
I0509 16:01:31.752562 118508 net.cpp:367] relu1 -> conv1 (in-place)
I0509 16:01:31.752566 118508 net.cpp:122] Setting up relu1
I0509 16:01:31.752569 118508 net.cpp:129] Top shape: 10 96 55 55 (2904000)
I0509 16:01:31.752573 118508 net.cpp:137] Memory required for data: 29415480
I0509 16:01:31.752574 118508 layer_factory.hpp:77] Creating layer pool1
I0509 16:01:31.752578 118508 net.cpp:84] Creating Layer pool1
I0509 16:01:31.752581 118508 net.cpp:406] pool1 <- conv1
I0509 16:01:31.752584 118508 net.cpp:380] pool1 -> pool1
I0509 16:01:31.752593 118508 net.cpp:122] Setting up pool1
I0509 16:01:31.752596 118508 net.cpp:129] Top shape: 10 96 27 27 (699840)
I0509 16:01:31.752599 118508 net.cpp:137] Memory required for data: 32214840
I0509 16:01:31.752601 118508 layer_factory.hpp:77] Creating layer norm1
I0509 16:01:31.752606 118508 net.cpp:84] Creating Layer norm1
I0509 16:01:31.752609 118508 net.cpp:406] norm1 <- pool1
I0509 16:01:31.752612 118508 net.cpp:380] norm1 -> norm1
I0509 16:01:31.752619 118508 net.cpp:122] Setting up norm1
I0509 16:01:31.752622 118508 net.cpp:129] Top shape: 10 96 27 27 (699840)
I0509 16:01:31.752624 118508 net.cpp:137] Memory required for data: 35014200
I0509 16:01:31.752626 118508 layer_factory.hpp:77] Creating layer conv2
I0509 16:01:31.752631 118508 net.cpp:84] Creating Layer conv2
I0509 16:01:31.752635 118508 net.cpp:406] conv2 <- norm1
I0509 16:01:31.752637 118508 net.cpp:380] conv2 -> conv2
I0509 16:01:31.752645 118508 base_conv_layer.cpp:121] Group is 2channel is96number of output is 256
I0509 16:01:31.753098 118508 net.cpp:122] Setting up conv2
I0509 16:01:31.753104 118508 net.cpp:129] Top shape: 10 256 27 27 (1866240)
I0509 16:01:31.753108 118508 net.cpp:137] Memory required for data: 42479160
I0509 16:01:31.753113 118508 layer_factory.hpp:77] Creating layer relu2
I0509 16:01:31.753118 118508 net.cpp:84] Creating Layer relu2
I0509 16:01:31.753120 118508 net.cpp:406] relu2 <- conv2
I0509 16:01:31.753123 118508 net.cpp:367] relu2 -> conv2 (in-place)
I0509 16:01:31.753127 118508 net.cpp:122] Setting up relu2
I0509 16:01:31.753131 118508 net.cpp:129] Top shape: 10 256 27 27 (1866240)
I0509 16:01:31.753134 118508 net.cpp:137] Memory required for data: 49944120
I0509 16:01:31.753136 118508 layer_factory.hpp:77] Creating layer pool2
I0509 16:01:31.753141 118508 net.cpp:84] Creating Layer pool2
I0509 16:01:31.753144 118508 net.cpp:406] pool2 <- conv2
I0509 16:01:31.753147 118508 net.cpp:380] pool2 -> pool2
I0509 16:01:31.753154 118508 net.cpp:122] Setting up pool2
I0509 16:01:31.753156 118508 net.cpp:129] Top shape: 10 256 13 13 (432640)
I0509 16:01:31.753159 118508 net.cpp:137] Memory required for data: 51674680
I0509 16:01:31.753162 118508 layer_factory.hpp:77] Creating layer norm2
I0509 16:01:31.753170 118508 net.cpp:84] Creating Layer norm2
I0509 16:01:31.753173 118508 net.cpp:406] norm2 <- pool2
I0509 16:01:31.753177 118508 net.cpp:380] norm2 -> norm2
I0509 16:01:31.753182 118508 net.cpp:122] Setting up norm2
I0509 16:01:31.753186 118508 net.cpp:129] Top shape: 10 256 13 13 (432640)
I0509 16:01:31.753188 118508 net.cpp:137] Memory required for data: 53405240
I0509 16:01:31.753190 118508 layer_factory.hpp:77] Creating layer conv3
I0509 16:01:31.753199 118508 net.cpp:84] Creating Layer conv3
I0509 16:01:31.753202 118508 net.cpp:406] conv3 <- norm2
I0509 16:01:31.753206 118508 net.cpp:380] conv3 -> conv3
I0509 16:01:31.753211 118508 base_conv_layer.cpp:121] Group is 1channel is256number of output is 384
I0509 16:01:31.754484 118508 net.cpp:122] Setting up conv3
I0509 16:01:31.754490 118508 net.cpp:129] Top shape: 10 384 13 13 (648960)
I0509 16:01:31.754493 118508 net.cpp:137] Memory required for data: 56001080
I0509 16:01:31.754499 118508 layer_factory.hpp:77] Creating layer relu3
I0509 16:01:31.754505 118508 net.cpp:84] Creating Layer relu3
I0509 16:01:31.754508 118508 net.cpp:406] relu3 <- conv3
I0509 16:01:31.754511 118508 net.cpp:367] relu3 -> conv3 (in-place)
I0509 16:01:31.754515 118508 net.cpp:122] Setting up relu3
I0509 16:01:31.754519 118508 net.cpp:129] Top shape: 10 384 13 13 (648960)
I0509 16:01:31.754523 118508 net.cpp:137] Memory required for data: 58596920
I0509 16:01:31.754524 118508 layer_factory.hpp:77] Creating layer conv4
I0509 16:01:31.754528 118508 net.cpp:84] Creating Layer conv4
I0509 16:01:31.754531 118508 net.cpp:406] conv4 <- conv3
I0509 16:01:31.754534 118508 net.cpp:380] conv4 -> conv4
I0509 16:01:31.754545 118508 base_conv_layer.cpp:121] Group is 2channel is384number of output is 384
I0509 16:01:31.755177 118508 net.cpp:122] Setting up conv4
I0509 16:01:31.755184 118508 net.cpp:129] Top shape: 10 384 13 13 (648960)
I0509 16:01:31.755187 118508 net.cpp:137] Memory required for data: 61192760
I0509 16:01:31.755192 118508 layer_factory.hpp:77] Creating layer relu4
I0509 16:01:31.755194 118508 net.cpp:84] Creating Layer relu4
I0509 16:01:31.755198 118508 net.cpp:406] relu4 <- conv4
I0509 16:01:31.755203 118508 net.cpp:367] relu4 -> conv4 (in-place)
I0509 16:01:31.755206 118508 net.cpp:122] Setting up relu4
I0509 16:01:31.755210 118508 net.cpp:129] Top shape: 10 384 13 13 (648960)
I0509 16:01:31.755213 118508 net.cpp:137] Memory required for data: 63788600
I0509 16:01:31.755215 118508 layer_factory.hpp:77] Creating layer conv5
I0509 16:01:31.755219 118508 net.cpp:84] Creating Layer conv5
I0509 16:01:31.755221 118508 net.cpp:406] conv5 <- conv4
I0509 16:01:31.755226 118508 net.cpp:380] conv5 -> conv5
I0509 16:01:31.755233 118508 base_conv_layer.cpp:121] Group is 2channel is384number of output is 256
I0509 16:01:31.755872 118508 net.cpp:122] Setting up conv5
I0509 16:01:31.755877 118508 net.cpp:129] Top shape: 10 256 13 13 (432640)
I0509 16:01:31.755880 118508 net.cpp:137] Memory required for data: 65519160
I0509 16:01:31.755887 118508 layer_factory.hpp:77] Creating layer relu5
I0509 16:01:31.755890 118508 net.cpp:84] Creating Layer relu5
I0509 16:01:31.755893 118508 net.cpp:406] relu5 <- conv5
I0509 16:01:31.755897 118508 net.cpp:367] relu5 -> conv5 (in-place)
I0509 16:01:31.755901 118508 net.cpp:122] Setting up relu5
I0509 16:01:31.755905 118508 net.cpp:129] Top shape: 10 256 13 13 (432640)
I0509 16:01:31.755908 118508 net.cpp:137] Memory required for data: 67249720
I0509 16:01:31.755909 118508 layer_factory.hpp:77] Creating layer pool5
I0509 16:01:31.755914 118508 net.cpp:84] Creating Layer pool5
I0509 16:01:31.755918 118508 net.cpp:406] pool5 <- conv5
I0509 16:01:31.755920 118508 net.cpp:380] pool5 -> pool5
I0509 16:01:31.755926 118508 net.cpp:122] Setting up pool5
I0509 16:01:31.755930 118508 net.cpp:129] Top shape: 10 256 6 6 (92160)
I0509 16:01:31.755933 118508 net.cpp:137] Memory required for data: 67618360
I0509 16:01:31.755935 118508 layer_factory.hpp:77] Creating layer fc6
I0509 16:01:31.755941 118508 net.cpp:84] Creating Layer fc6
I0509 16:01:31.755944 118508 net.cpp:406] fc6 <- pool5
I0509 16:01:31.755951 118508 net.cpp:380] fc6 -> fc6
I0509 16:01:31.784436 118508 net.cpp:122] Setting up fc6
I0509 16:01:31.784461 118508 net.cpp:129] Top shape: 10 4096 (40960)
I0509 16:01:31.784462 118508 net.cpp:137] Memory required for data: 67782200
I0509 16:01:31.784471 118508 layer_factory.hpp:77] Creating layer relu6
I0509 16:01:31.784478 118508 net.cpp:84] Creating Layer relu6
I0509 16:01:31.784482 118508 net.cpp:406] relu6 <- fc6
I0509 16:01:31.784489 118508 net.cpp:367] relu6 -> fc6 (in-place)
I0509 16:01:31.784495 118508 net.cpp:122] Setting up relu6
I0509 16:01:31.784498 118508 net.cpp:129] Top shape: 10 4096 (40960)
I0509 16:01:31.784502 118508 net.cpp:137] Memory required for data: 67946040
I0509 16:01:31.784503 118508 layer_factory.hpp:77] Creating layer drop6
I0509 16:01:31.784509 118508 net.cpp:84] Creating Layer drop6
I0509 16:01:31.784512 118508 net.cpp:406] drop6 <- fc6
I0509 16:01:31.784515 118508 net.cpp:367] drop6 -> fc6 (in-place)
I0509 16:01:31.784521 118508 net.cpp:122] Setting up drop6
I0509 16:01:31.784524 118508 net.cpp:129] Top shape: 10 4096 (40960)
I0509 16:01:31.784526 118508 net.cpp:137] Memory required for data: 68109880
I0509 16:01:31.784529 118508 layer_factory.hpp:77] Creating layer fc7
I0509 16:01:31.784534 118508 net.cpp:84] Creating Layer fc7
I0509 16:01:31.784536 118508 net.cpp:406] fc7 <- fc6
I0509 16:01:31.784540 118508 net.cpp:380] fc7 -> fc7
I0509 16:01:31.797031 118508 net.cpp:122] Setting up fc7
I0509 16:01:31.797050 118508 net.cpp:129] Top shape: 10 4096 (40960)
I0509 16:01:31.797053 118508 net.cpp:137] Memory required for data: 68273720
I0509 16:01:31.797060 118508 layer_factory.hpp:77] Creating layer relu7
I0509 16:01:31.797067 118508 net.cpp:84] Creating Layer relu7
I0509 16:01:31.797070 118508 net.cpp:406] relu7 <- fc7
I0509 16:01:31.797076 118508 net.cpp:367] relu7 -> fc7 (in-place)
I0509 16:01:31.797082 118508 net.cpp:122] Setting up relu7
I0509 16:01:31.797086 118508 net.cpp:129] Top shape: 10 4096 (40960)
I0509 16:01:31.797088 118508 net.cpp:137] Memory required for data: 68437560
I0509 16:01:31.797091 118508 layer_factory.hpp:77] Creating layer drop7
I0509 16:01:31.797096 118508 net.cpp:84] Creating Layer drop7
I0509 16:01:31.797098 118508 net.cpp:406] drop7 <- fc7
I0509 16:01:31.797101 118508 net.cpp:367] drop7 -> fc7 (in-place)
I0509 16:01:31.797106 118508 net.cpp:122] Setting up drop7
I0509 16:01:31.797109 118508 net.cpp:129] Top shape: 10 4096 (40960)
I0509 16:01:31.797111 118508 net.cpp:137] Memory required for data: 68601400
I0509 16:01:31.797114 118508 layer_factory.hpp:77] Creating layer fc8
I0509 16:01:31.797121 118508 net.cpp:84] Creating Layer fc8
I0509 16:01:31.797122 118508 net.cpp:406] fc8 <- fc7
I0509 16:01:31.797127 118508 net.cpp:380] fc8 -> fc8
I0509 16:01:31.800706 118508 net.cpp:122] Setting up fc8
I0509 16:01:31.800717 118508 net.cpp:129] Top shape: 10 1000 (10000)
I0509 16:01:31.800719 118508 net.cpp:137] Memory required for data: 68641400
I0509 16:01:31.800725 118508 layer_factory.hpp:77] Creating layer prob
I0509 16:01:31.800731 118508 net.cpp:84] Creating Layer prob
I0509 16:01:31.800734 118508 net.cpp:406] prob <- fc8
I0509 16:01:31.800740 118508 net.cpp:380] prob -> prob
I0509 16:01:31.800750 118508 net.cpp:122] Setting up prob
I0509 16:01:31.800755 118508 net.cpp:129] Top shape: 10 1000 (10000)
I0509 16:01:31.800756 118508 net.cpp:137] Memory required for data: 68681400
I0509 16:01:31.800760 118508 net.cpp:200] prob does not need backward computation.
I0509 16:01:31.800762 118508 net.cpp:200] fc8 does not need backward computation.
I0509 16:01:31.800765 118508 net.cpp:200] drop7 does not need backward computation.
I0509 16:01:31.800767 118508 net.cpp:200] relu7 does not need backward computation.
I0509 16:01:31.800770 118508 net.cpp:200] fc7 does not need backward computation.
I0509 16:01:31.800773 118508 net.cpp:200] drop6 does not need backward computation.
I0509 16:01:31.800776 118508 net.cpp:200] relu6 does not need backward computation.
I0509 16:01:31.800778 118508 net.cpp:200] fc6 does not need backward computation.
I0509 16:01:31.800788 118508 net.cpp:200] pool5 does not need backward computation.
I0509 16:01:31.800792 118508 net.cpp:200] relu5 does not need backward computation.
I0509 16:01:31.800794 118508 net.cpp:200] conv5 does not need backward computation.
I0509 16:01:31.800798 118508 net.cpp:200] relu4 does not need backward computation.
I0509 16:01:31.800801 118508 net.cpp:200] conv4 does not need backward computation.
I0509 16:01:31.800804 118508 net.cpp:200] relu3 does not need backward computation.
I0509 16:01:31.800806 118508 net.cpp:200] conv3 does not need backward computation.
I0509 16:01:31.800810 118508 net.cpp:200] norm2 does not need backward computation.
I0509 16:01:31.800813 118508 net.cpp:200] pool2 does not need backward computation.
I0509 16:01:31.800817 118508 net.cpp:200] relu2 does not need backward computation.
I0509 16:01:31.800819 118508 net.cpp:200] conv2 does not need backward computation.
I0509 16:01:31.800822 118508 net.cpp:200] norm1 does not need backward computation.
I0509 16:01:31.800825 118508 net.cpp:200] pool1 does not need backward computation.
I0509 16:01:31.800829 118508 net.cpp:200] relu1 does not need backward computation.
I0509 16:01:31.800832 118508 net.cpp:200] conv1 does not need backward computation.
I0509 16:01:31.800834 118508 net.cpp:200] data does not need backward computation.
I0509 16:01:31.800837 118508 net.cpp:242] This network produces output prob
I0509 16:01:31.800848 118508 net.cpp:255] Network initialization done.
     0.701293346            518,937      branch-misses:u          
     0.701293346        101,244,298      branches:u               
     0.801476349                392      branch-misses:u          
     0.801476349         58,893,638      branches:u               
I0509 16:01:31.953037 118508 net.cpp:744] Ignoring source layer loss
Traceback (most recent call last):
  File "test_model.py", line 32, in <module>
    out = net.forward_all(data=np.asarray([img.transpose(2,0,1)]))
  File "/home/data0/shikhar/caffe/caffe/python/caffe/pycaffe.py", line 202, in _Net_forward_all
    outs = self.forward(blobs=blobs, **batch)
  File "/home/data0/shikhar/caffe/caffe/python/caffe/pycaffe.py", line 129, in _Net_forward
    self.blobs[in_].data[...] = blob
ValueError: could not broadcast input array from shape (10,1,28,28) into shape (10,3,227,227)
     0.883894648            791,219      branch-misses:u          
     0.883894648         66,609,344      branches:u               
