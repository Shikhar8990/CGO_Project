#           time             counts unit events
     0.100379892        198,538,268      instructions:u           
     0.100379892        267,064,743      cycles:u                 
     0.200571675        315,015,816      instructions:u           
     0.200571675        422,097,954      cycles:u                 
     0.300706189        428,377,929      instructions:u           
     0.300706189        263,534,116      cycles:u                 
     0.400842046        360,978,750      instructions:u           
     0.400842046        257,841,861      cycles:u                 
     0.500968535        510,190,038      instructions:u           
     0.500968535        279,798,091      cycles:u                 
     0.601084459        357,317,234      instructions:u           
     0.601084459        180,854,213      cycles:u                 
WARNING: Logging before InitGoogleLogging() is written to STDERR
W0509 16:01:30.864670 118478 _caffe.cpp:139] DEPRECATION WARNING - deprecated use of Python interface
W0509 16:01:30.864692 118478 _caffe.cpp:140] Use this instead (with the named "weights" parameter):
W0509 16:01:30.864696 118478 _caffe.cpp:142] Net('models/bvlc_reference_caffenet/deploy.prototxt', 1, weights='models/bvlc_reference_caffenet/caffenet_train_iter_27.caffemodel')
I0509 16:01:30.866053 118478 net.cpp:51] Initializing net from parameters: 
name: "CaffeNet"
state {
  phase: TEST
  level: 0
}
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 10
      dim: 3
      dim: 227
      dim: 227
    }
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  inner_product_param {
    num_output: 1000
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8"
  top: "prob"
}
I0509 16:01:30.866122 118478 layer_factory.hpp:77] Creating layer data
I0509 16:01:30.866134 118478 net.cpp:84] Creating Layer data
I0509 16:01:30.866138 118478 net.cpp:380] data -> data
I0509 16:01:30.866156 118478 net.cpp:122] Setting up data
I0509 16:01:30.866163 118478 net.cpp:129] Top shape: 10 3 227 227 (1545870)
I0509 16:01:30.866165 118478 net.cpp:137] Memory required for data: 6183480
I0509 16:01:30.866168 118478 layer_factory.hpp:77] Creating layer conv1
I0509 16:01:30.866175 118478 net.cpp:84] Creating Layer conv1
I0509 16:01:30.866178 118478 net.cpp:406] conv1 <- data
I0509 16:01:30.866183 118478 net.cpp:380] conv1 -> conv1
I0509 16:01:30.866191 118478 base_conv_layer.cpp:121] Group is 1channel is3number of output is 96
I0509 16:01:30.866266 118478 net.cpp:122] Setting up conv1
I0509 16:01:30.866271 118478 net.cpp:129] Top shape: 10 96 55 55 (2904000)
I0509 16:01:30.866273 118478 net.cpp:137] Memory required for data: 17799480
I0509 16:01:30.866281 118478 layer_factory.hpp:77] Creating layer relu1
I0509 16:01:30.866286 118478 net.cpp:84] Creating Layer relu1
I0509 16:01:30.866289 118478 net.cpp:406] relu1 <- conv1
I0509 16:01:30.866293 118478 net.cpp:367] relu1 -> conv1 (in-place)
I0509 16:01:30.866297 118478 net.cpp:122] Setting up relu1
I0509 16:01:30.866302 118478 net.cpp:129] Top shape: 10 96 55 55 (2904000)
I0509 16:01:30.866303 118478 net.cpp:137] Memory required for data: 29415480
I0509 16:01:30.866307 118478 layer_factory.hpp:77] Creating layer pool1
I0509 16:01:30.866310 118478 net.cpp:84] Creating Layer pool1
I0509 16:01:30.866312 118478 net.cpp:406] pool1 <- conv1
I0509 16:01:30.866317 118478 net.cpp:380] pool1 -> pool1
I0509 16:01:30.866323 118478 net.cpp:122] Setting up pool1
I0509 16:01:30.866328 118478 net.cpp:129] Top shape: 10 96 27 27 (699840)
I0509 16:01:30.866329 118478 net.cpp:137] Memory required for data: 32214840
I0509 16:01:30.866333 118478 layer_factory.hpp:77] Creating layer norm1
I0509 16:01:30.866338 118478 net.cpp:84] Creating Layer norm1
I0509 16:01:30.866340 118478 net.cpp:406] norm1 <- pool1
I0509 16:01:30.866343 118478 net.cpp:380] norm1 -> norm1
I0509 16:01:30.866349 118478 net.cpp:122] Setting up norm1
I0509 16:01:30.866353 118478 net.cpp:129] Top shape: 10 96 27 27 (699840)
I0509 16:01:30.866355 118478 net.cpp:137] Memory required for data: 35014200
I0509 16:01:30.866358 118478 layer_factory.hpp:77] Creating layer conv2
I0509 16:01:30.866363 118478 net.cpp:84] Creating Layer conv2
I0509 16:01:30.866365 118478 net.cpp:406] conv2 <- norm1
I0509 16:01:30.866369 118478 net.cpp:380] conv2 -> conv2
I0509 16:01:30.866375 118478 base_conv_layer.cpp:121] Group is 2channel is96number of output is 256
I0509 16:01:30.866804 118478 net.cpp:122] Setting up conv2
I0509 16:01:30.866809 118478 net.cpp:129] Top shape: 10 256 27 27 (1866240)
I0509 16:01:30.866812 118478 net.cpp:137] Memory required for data: 42479160
I0509 16:01:30.866817 118478 layer_factory.hpp:77] Creating layer relu2
I0509 16:01:30.866822 118478 net.cpp:84] Creating Layer relu2
I0509 16:01:30.866824 118478 net.cpp:406] relu2 <- conv2
I0509 16:01:30.866827 118478 net.cpp:367] relu2 -> conv2 (in-place)
I0509 16:01:30.866832 118478 net.cpp:122] Setting up relu2
I0509 16:01:30.866834 118478 net.cpp:129] Top shape: 10 256 27 27 (1866240)
I0509 16:01:30.866837 118478 net.cpp:137] Memory required for data: 49944120
I0509 16:01:30.866839 118478 layer_factory.hpp:77] Creating layer pool2
I0509 16:01:30.866843 118478 net.cpp:84] Creating Layer pool2
I0509 16:01:30.866845 118478 net.cpp:406] pool2 <- conv2
I0509 16:01:30.866849 118478 net.cpp:380] pool2 -> pool2
I0509 16:01:30.866854 118478 net.cpp:122] Setting up pool2
I0509 16:01:30.866858 118478 net.cpp:129] Top shape: 10 256 13 13 (432640)
I0509 16:01:30.866860 118478 net.cpp:137] Memory required for data: 51674680
I0509 16:01:30.866863 118478 layer_factory.hpp:77] Creating layer norm2
I0509 16:01:30.866873 118478 net.cpp:84] Creating Layer norm2
I0509 16:01:30.866875 118478 net.cpp:406] norm2 <- pool2
I0509 16:01:30.866879 118478 net.cpp:380] norm2 -> norm2
I0509 16:01:30.866884 118478 net.cpp:122] Setting up norm2
I0509 16:01:30.866888 118478 net.cpp:129] Top shape: 10 256 13 13 (432640)
I0509 16:01:30.866890 118478 net.cpp:137] Memory required for data: 53405240
I0509 16:01:30.866892 118478 layer_factory.hpp:77] Creating layer conv3
I0509 16:01:30.866897 118478 net.cpp:84] Creating Layer conv3
I0509 16:01:30.866899 118478 net.cpp:406] conv3 <- norm2
I0509 16:01:30.866904 118478 net.cpp:380] conv3 -> conv3
I0509 16:01:30.866909 118478 base_conv_layer.cpp:121] Group is 1channel is256number of output is 384
I0509 16:01:30.867784 118478 net.cpp:122] Setting up conv3
I0509 16:01:30.867790 118478 net.cpp:129] Top shape: 10 384 13 13 (648960)
I0509 16:01:30.867794 118478 net.cpp:137] Memory required for data: 56001080
I0509 16:01:30.867799 118478 layer_factory.hpp:77] Creating layer relu3
I0509 16:01:30.867804 118478 net.cpp:84] Creating Layer relu3
I0509 16:01:30.867805 118478 net.cpp:406] relu3 <- conv3
I0509 16:01:30.867810 118478 net.cpp:367] relu3 -> conv3 (in-place)
I0509 16:01:30.867815 118478 net.cpp:122] Setting up relu3
I0509 16:01:30.867818 118478 net.cpp:129] Top shape: 10 384 13 13 (648960)
I0509 16:01:30.867820 118478 net.cpp:137] Memory required for data: 58596920
I0509 16:01:30.867822 118478 layer_factory.hpp:77] Creating layer conv4
I0509 16:01:30.867826 118478 net.cpp:84] Creating Layer conv4
I0509 16:01:30.867830 118478 net.cpp:406] conv4 <- conv3
I0509 16:01:30.867833 118478 net.cpp:380] conv4 -> conv4
I0509 16:01:30.867841 118478 base_conv_layer.cpp:121] Group is 2channel is384number of output is 384
I0509 16:01:30.868867 118478 net.cpp:122] Setting up conv4
I0509 16:01:30.868875 118478 net.cpp:129] Top shape: 10 384 13 13 (648960)
I0509 16:01:30.868878 118478 net.cpp:137] Memory required for data: 61192760
I0509 16:01:30.868882 118478 layer_factory.hpp:77] Creating layer relu4
I0509 16:01:30.868886 118478 net.cpp:84] Creating Layer relu4
I0509 16:01:30.868890 118478 net.cpp:406] relu4 <- conv4
I0509 16:01:30.868893 118478 net.cpp:367] relu4 -> conv4 (in-place)
I0509 16:01:30.868899 118478 net.cpp:122] Setting up relu4
I0509 16:01:30.868902 118478 net.cpp:129] Top shape: 10 384 13 13 (648960)
I0509 16:01:30.868906 118478 net.cpp:137] Memory required for data: 63788600
I0509 16:01:30.868907 118478 layer_factory.hpp:77] Creating layer conv5
I0509 16:01:30.868912 118478 net.cpp:84] Creating Layer conv5
I0509 16:01:30.868914 118478 net.cpp:406] conv5 <- conv4
I0509 16:01:30.868919 118478 net.cpp:380] conv5 -> conv5
I0509 16:01:30.868926 118478 base_conv_layer.cpp:121] Group is 2channel is384number of output is 256
I0509 16:01:30.869525 118478 net.cpp:122] Setting up conv5
I0509 16:01:30.869530 118478 net.cpp:129] Top shape: 10 256 13 13 (432640)
I0509 16:01:30.869534 118478 net.cpp:137] Memory required for data: 65519160
I0509 16:01:30.869539 118478 layer_factory.hpp:77] Creating layer relu5
I0509 16:01:30.869544 118478 net.cpp:84] Creating Layer relu5
I0509 16:01:30.869546 118478 net.cpp:406] relu5 <- conv5
I0509 16:01:30.869550 118478 net.cpp:367] relu5 -> conv5 (in-place)
I0509 16:01:30.869554 118478 net.cpp:122] Setting up relu5
I0509 16:01:30.869557 118478 net.cpp:129] Top shape: 10 256 13 13 (432640)
I0509 16:01:30.869560 118478 net.cpp:137] Memory required for data: 67249720
I0509 16:01:30.869562 118478 layer_factory.hpp:77] Creating layer pool5
I0509 16:01:30.869567 118478 net.cpp:84] Creating Layer pool5
I0509 16:01:30.869570 118478 net.cpp:406] pool5 <- conv5
I0509 16:01:30.869573 118478 net.cpp:380] pool5 -> pool5
I0509 16:01:30.869580 118478 net.cpp:122] Setting up pool5
I0509 16:01:30.869582 118478 net.cpp:129] Top shape: 10 256 6 6 (92160)
I0509 16:01:30.869585 118478 net.cpp:137] Memory required for data: 67618360
I0509 16:01:30.869587 118478 layer_factory.hpp:77] Creating layer fc6
I0509 16:01:30.869593 118478 net.cpp:84] Creating Layer fc6
I0509 16:01:30.869596 118478 net.cpp:406] fc6 <- pool5
I0509 16:01:30.869603 118478 net.cpp:380] fc6 -> fc6
I0509 16:01:30.897485 118478 net.cpp:122] Setting up fc6
I0509 16:01:30.897505 118478 net.cpp:129] Top shape: 10 4096 (40960)
I0509 16:01:30.897506 118478 net.cpp:137] Memory required for data: 67782200
I0509 16:01:30.897516 118478 layer_factory.hpp:77] Creating layer relu6
I0509 16:01:30.897522 118478 net.cpp:84] Creating Layer relu6
I0509 16:01:30.897526 118478 net.cpp:406] relu6 <- fc6
I0509 16:01:30.897532 118478 net.cpp:367] relu6 -> fc6 (in-place)
I0509 16:01:30.897539 118478 net.cpp:122] Setting up relu6
I0509 16:01:30.897542 118478 net.cpp:129] Top shape: 10 4096 (40960)
I0509 16:01:30.897545 118478 net.cpp:137] Memory required for data: 67946040
I0509 16:01:30.897547 118478 layer_factory.hpp:77] Creating layer drop6
I0509 16:01:30.897553 118478 net.cpp:84] Creating Layer drop6
I0509 16:01:30.897557 118478 net.cpp:406] drop6 <- fc6
I0509 16:01:30.897559 118478 net.cpp:367] drop6 -> fc6 (in-place)
I0509 16:01:30.897564 118478 net.cpp:122] Setting up drop6
I0509 16:01:30.897567 118478 net.cpp:129] Top shape: 10 4096 (40960)
I0509 16:01:30.897569 118478 net.cpp:137] Memory required for data: 68109880
I0509 16:01:30.897572 118478 layer_factory.hpp:77] Creating layer fc7
I0509 16:01:30.897578 118478 net.cpp:84] Creating Layer fc7
I0509 16:01:30.897579 118478 net.cpp:406] fc7 <- fc6
I0509 16:01:30.897583 118478 net.cpp:380] fc7 -> fc7
I0509 16:01:30.909893 118478 net.cpp:122] Setting up fc7
I0509 16:01:30.909912 118478 net.cpp:129] Top shape: 10 4096 (40960)
I0509 16:01:30.909914 118478 net.cpp:137] Memory required for data: 68273720
I0509 16:01:30.909921 118478 layer_factory.hpp:77] Creating layer relu7
I0509 16:01:30.909929 118478 net.cpp:84] Creating Layer relu7
I0509 16:01:30.909932 118478 net.cpp:406] relu7 <- fc7
I0509 16:01:30.909939 118478 net.cpp:367] relu7 -> fc7 (in-place)
I0509 16:01:30.909943 118478 net.cpp:122] Setting up relu7
I0509 16:01:30.909946 118478 net.cpp:129] Top shape: 10 4096 (40960)
I0509 16:01:30.909950 118478 net.cpp:137] Memory required for data: 68437560
I0509 16:01:30.909951 118478 layer_factory.hpp:77] Creating layer drop7
I0509 16:01:30.909955 118478 net.cpp:84] Creating Layer drop7
I0509 16:01:30.909958 118478 net.cpp:406] drop7 <- fc7
I0509 16:01:30.909961 118478 net.cpp:367] drop7 -> fc7 (in-place)
I0509 16:01:30.909965 118478 net.cpp:122] Setting up drop7
I0509 16:01:30.909968 118478 net.cpp:129] Top shape: 10 4096 (40960)
I0509 16:01:30.909971 118478 net.cpp:137] Memory required for data: 68601400
I0509 16:01:30.909973 118478 layer_factory.hpp:77] Creating layer fc8
I0509 16:01:30.909978 118478 net.cpp:84] Creating Layer fc8
I0509 16:01:30.909981 118478 net.cpp:406] fc8 <- fc7
I0509 16:01:30.909986 118478 net.cpp:380] fc8 -> fc8
I0509 16:01:30.913180 118478 net.cpp:122] Setting up fc8
I0509 16:01:30.913187 118478 net.cpp:129] Top shape: 10 1000 (10000)
I0509 16:01:30.913188 118478 net.cpp:137] Memory required for data: 68641400
I0509 16:01:30.913193 118478 layer_factory.hpp:77] Creating layer prob
I0509 16:01:30.913198 118478 net.cpp:84] Creating Layer prob
I0509 16:01:30.913202 118478 net.cpp:406] prob <- fc8
I0509 16:01:30.913206 118478 net.cpp:380] prob -> prob
I0509 16:01:30.913219 118478 net.cpp:122] Setting up prob
I0509 16:01:30.913223 118478 net.cpp:129] Top shape: 10 1000 (10000)
I0509 16:01:30.913224 118478 net.cpp:137] Memory required for data: 68681400
I0509 16:01:30.913228 118478 net.cpp:200] prob does not need backward computation.
I0509 16:01:30.913230 118478 net.cpp:200] fc8 does not need backward computation.
I0509 16:01:30.913233 118478 net.cpp:200] drop7 does not need backward computation.
I0509 16:01:30.913235 118478 net.cpp:200] relu7 does not need backward computation.
I0509 16:01:30.913239 118478 net.cpp:200] fc7 does not need backward computation.
I0509 16:01:30.913241 118478 net.cpp:200] drop6 does not need backward computation.
I0509 16:01:30.913244 118478 net.cpp:200] relu6 does not need backward computation.
I0509 16:01:30.913246 118478 net.cpp:200] fc6 does not need backward computation.
I0509 16:01:30.913254 118478 net.cpp:200] pool5 does not need backward computation.
I0509 16:01:30.913257 118478 net.cpp:200] relu5 does not need backward computation.
I0509 16:01:30.913260 118478 net.cpp:200] conv5 does not need backward computation.
I0509 16:01:30.913264 118478 net.cpp:200] relu4 does not need backward computation.
I0509 16:01:30.913266 118478 net.cpp:200] conv4 does not need backward computation.
I0509 16:01:30.913269 118478 net.cpp:200] relu3 does not need backward computation.
I0509 16:01:30.913272 118478 net.cpp:200] conv3 does not need backward computation.
I0509 16:01:30.913276 118478 net.cpp:200] norm2 does not need backward computation.
I0509 16:01:30.913278 118478 net.cpp:200] pool2 does not need backward computation.
I0509 16:01:30.913281 118478 net.cpp:200] relu2 does not need backward computation.
I0509 16:01:30.913285 118478 net.cpp:200] conv2 does not need backward computation.
I0509 16:01:30.913287 118478 net.cpp:200] norm1 does not need backward computation.
I0509 16:01:30.913290 118478 net.cpp:200] pool1 does not need backward computation.
I0509 16:01:30.913293 118478 net.cpp:200] relu1 does not need backward computation.
I0509 16:01:30.913296 118478 net.cpp:200] conv1 does not need backward computation.
I0509 16:01:30.913300 118478 net.cpp:200] data does not need backward computation.
I0509 16:01:30.913302 118478 net.cpp:242] This network produces output prob
I0509 16:01:30.913314 118478 net.cpp:255] Network initialization done.
     0.701209522        399,158,880      instructions:u           
     0.701209522        164,035,414      cycles:u                 
     0.801361163        252,578,568      instructions:u           
     0.801361163        137,703,349      cycles:u                 
I0509 16:01:31.062522 118478 net.cpp:744] Ignoring source layer loss
Traceback (most recent call last):
  File "test_model.py", line 32, in <module>
    out = net.forward_all(data=np.asarray([img.transpose(2,0,1)]))
  File "/home/data0/shikhar/caffe/caffe/python/caffe/pycaffe.py", line 202, in _Net_forward_all
    outs = self.forward(blobs=blobs, **batch)
  File "/home/data0/shikhar/caffe/caffe/python/caffe/pycaffe.py", line 129, in _Net_forward
    self.blobs[in_].data[...] = blob
ValueError: could not broadcast input array from shape (10,1,28,28) into shape (10,3,227,227)
     0.886297583        342,557,081      instructions:u           
     0.886297583        208,605,770      cycles:u                 
