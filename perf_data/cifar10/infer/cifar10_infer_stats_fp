print interval < 100ms. The overhead percentage could be high in some cases. Please proceed with caution.
#           time             counts unit events
     0.010109370                313      r02c0:u                  
     0.020220672                352      r02c0:u                  
     0.030347486             19,678      r02c0:u                  
     0.040479426              1,089      r02c0:u                  
     0.050614302                114      r02c0:u                  
     0.060744981             37,592      r02c0:u                  
     0.070875759                746      r02c0:u                  
     0.081006988                 20      r02c0:u                  
     0.091139965             13,223      r02c0:u                  
     0.101275972             25,691      r02c0:u                  
     0.111410480             34,186      r02c0:u                  
     0.121548378             37,563      r02c0:u                  
     0.131653566             30,775      r02c0:u                  
     0.141802277              3,193      r02c0:u                  
     0.151957852                358      r02c0:u                  
     0.162101062              2,008      r02c0:u                  
     0.172242181                713      r02c0:u                  
     0.182382017              1,424      r02c0:u                  
     0.192520313              4,171      r02c0:u                  
     0.202654966              9,821      r02c0:u                  
     0.212790121                621      r02c0:u                  
     0.222921288                126      r02c0:u                  
     0.233053490                128      r02c0:u                  
     0.243183889                441      r02c0:u                  
     0.253315005                710      r02c0:u                  
#           time             counts unit events
     0.263444659              1,479      r02c0:u                  
     0.273577587              2,443      r02c0:u                  
     0.283674883              1,053      r02c0:u                  
     0.293805575              1,039      r02c0:u                  
     0.303933903              2,286      r02c0:u                  
     0.314063529                813      r02c0:u                  
     0.324193099             10,301      r02c0:u                  
     0.334322702              4,691      r02c0:u                  
     0.344451896              8,593      r02c0:u                  
     0.354581649              2,627      r02c0:u                  
     0.364716756              1,098      r02c0:u                  
     0.374846763              1,698      r02c0:u                  
     0.384974420              1,837      r02c0:u                  
     0.395101538                569      r02c0:u                  
     0.405229170                279      r02c0:u                  
     0.415373326                262      r02c0:u                  
     0.425498339                281      r02c0:u                  
     0.435623091                261      r02c0:u                  
     0.445751564                264      r02c0:u                  
     0.455907456                266      r02c0:u                  
     0.466054836                625      r02c0:u                  
     0.476192990                778      r02c0:u                  
     0.486329092              1,275      r02c0:u                  
     0.496462307                225      r02c0:u                  
     0.506595000                137      r02c0:u                  
#           time             counts unit events
     0.516726191              1,221      r02c0:u                  
     0.526862560              3,651      r02c0:u                  
     0.537012740              1,979      r02c0:u                  
     0.547145786              1,541      r02c0:u                  
     0.557278135                354      r02c0:u                  
     0.567410934              3,888      r02c0:u                  
     0.577543431              1,996      r02c0:u                  
     0.587643292              1,793      r02c0:u                  
     0.597781238                782      r02c0:u                  
     0.607907337              8,839      r02c0:u                  
     0.618028115             18,463      r02c0:u                  
WARNING: Logging before InitGoogleLogging() is written to STDERR
W0509 13:42:20.977334 114493 _caffe.cpp:139] DEPRECATION WARNING - deprecated use of Python interface
W0509 13:42:20.977357 114493 _caffe.cpp:140] Use this instead (with the named "weights" parameter):
W0509 13:42:20.977360 114493 _caffe.cpp:142] Net('examples/cifar10/cifar10_quick.prototxt', 1, weights='examples/cifar10/cifar10_quick_iter_5000.caffemodel.h5')
I0509 13:42:20.978757 114493 net.cpp:51] Initializing net from parameters: 
name: "CIFAR10_quick_test"
state {
  phase: TEST
  level: 0
}
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 3
      dim: 32
      dim: 32
    }
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 64
  }
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "ip2"
  top: "prob"
}
I0509 13:42:20.978806 114493 layer_factory.hpp:77] Creating layer data
I0509 13:42:20.978814 114493 net.cpp:84] Creating Layer data
I0509 13:42:20.978821 114493 net.cpp:380] data -> data
I0509 13:42:20.978835 114493 net.cpp:122] Setting up data
I0509 13:42:20.978842 114493 net.cpp:129] Top shape: 1 3 32 32 (3072)
I0509 13:42:20.978845 114493 net.cpp:137] Memory required for data: 12288
I0509 13:42:20.978847 114493 layer_factory.hpp:77] Creating layer conv1
I0509 13:42:20.978855 114493 net.cpp:84] Creating Layer conv1
I0509 13:42:20.978858 114493 net.cpp:406] conv1 <- data
I0509 13:42:20.978863 114493 net.cpp:380] conv1 -> conv1
I0509 13:42:20.978873 114493 base_conv_layer.cpp:121] Group is 1channel is3number of output is 32
I0509 13:42:20.978889 114493 net.cpp:122] Setting up conv1
I0509 13:42:20.978894 114493 net.cpp:129] Top shape: 1 32 32 32 (32768)
I0509 13:42:20.978898 114493 net.cpp:137] Memory required for data: 143360
I0509 13:42:20.978905 114493 layer_factory.hpp:77] Creating layer pool1
I0509 13:42:20.978911 114493 net.cpp:84] Creating Layer pool1
I0509 13:42:20.978914 114493 net.cpp:406] pool1 <- conv1
I0509 13:42:20.978919 114493 net.cpp:380] pool1 -> pool1
I0509 13:42:20.978926 114493 net.cpp:122] Setting up pool1
I0509 13:42:20.978930 114493 net.cpp:129] Top shape: 1 32 16 16 (8192)
I0509 13:42:20.978932 114493 net.cpp:137] Memory required for data: 176128
I0509 13:42:20.978941 114493 layer_factory.hpp:77] Creating layer relu1
I0509 13:42:20.978945 114493 net.cpp:84] Creating Layer relu1
I0509 13:42:20.978948 114493 net.cpp:406] relu1 <- pool1
I0509 13:42:20.978952 114493 net.cpp:367] relu1 -> pool1 (in-place)
I0509 13:42:20.978957 114493 net.cpp:122] Setting up relu1
I0509 13:42:20.978960 114493 net.cpp:129] Top shape: 1 32 16 16 (8192)
I0509 13:42:20.978963 114493 net.cpp:137] Memory required for data: 208896
I0509 13:42:20.978965 114493 layer_factory.hpp:77] Creating layer conv2
I0509 13:42:20.978971 114493 net.cpp:84] Creating Layer conv2
I0509 13:42:20.978974 114493 net.cpp:406] conv2 <- pool1
I0509 13:42:20.978978 114493 net.cpp:380] conv2 -> conv2
I0509 13:42:20.978986 114493 base_conv_layer.cpp:121] Group is 1channel is32number of output is 32
I0509 13:42:20.979039 114493 net.cpp:122] Setting up conv2
I0509 13:42:20.979044 114493 net.cpp:129] Top shape: 1 32 16 16 (8192)
I0509 13:42:20.979048 114493 net.cpp:137] Memory required for data: 241664
I0509 13:42:20.979053 114493 layer_factory.hpp:77] Creating layer relu2
I0509 13:42:20.979058 114493 net.cpp:84] Creating Layer relu2
I0509 13:42:20.979060 114493 net.cpp:406] relu2 <- conv2
I0509 13:42:20.979064 114493 net.cpp:367] relu2 -> conv2 (in-place)
I0509 13:42:20.979068 114493 net.cpp:122] Setting up relu2
I0509 13:42:20.979073 114493 net.cpp:129] Top shape: 1 32 16 16 (8192)
I0509 13:42:20.979075 114493 net.cpp:137] Memory required for data: 274432
I0509 13:42:20.979077 114493 layer_factory.hpp:77] Creating layer pool2
I0509 13:42:20.979081 114493 net.cpp:84] Creating Layer pool2
I0509 13:42:20.979084 114493 net.cpp:406] pool2 <- conv2
I0509 13:42:20.979089 114493 net.cpp:380] pool2 -> pool2
I0509 13:42:20.979094 114493 net.cpp:122] Setting up pool2
I0509 13:42:20.979097 114493 net.cpp:129] Top shape: 1 32 8 8 (2048)
I0509 13:42:20.979100 114493 net.cpp:137] Memory required for data: 282624
I0509 13:42:20.979104 114493 layer_factory.hpp:77] Creating layer conv3
I0509 13:42:20.979107 114493 net.cpp:84] Creating Layer conv3
I0509 13:42:20.979110 114493 net.cpp:406] conv3 <- pool2
I0509 13:42:20.979115 114493 net.cpp:380] conv3 -> conv3
I0509 13:42:20.979120 114493 base_conv_layer.cpp:121] Group is 1channel is32number of output is 64
I0509 13:42:20.979213 114493 net.cpp:122] Setting up conv3
I0509 13:42:20.979218 114493 net.cpp:129] Top shape: 1 64 8 8 (4096)
I0509 13:42:20.979221 114493 net.cpp:137] Memory required for data: 299008
I0509 13:42:20.979228 114493 layer_factory.hpp:77] Creating layer relu3
I0509 13:42:20.979233 114493 net.cpp:84] Creating Layer relu3
I0509 13:42:20.979235 114493 net.cpp:406] relu3 <- conv3
I0509 13:42:20.979239 114493 net.cpp:367] relu3 -> conv3 (in-place)
I0509 13:42:20.979244 114493 net.cpp:122] Setting up relu3
I0509 13:42:20.979248 114493 net.cpp:129] Top shape: 1 64 8 8 (4096)
I0509 13:42:20.979250 114493 net.cpp:137] Memory required for data: 315392
I0509 13:42:20.979252 114493 layer_factory.hpp:77] Creating layer pool3
I0509 13:42:20.979256 114493 net.cpp:84] Creating Layer pool3
I0509 13:42:20.979259 114493 net.cpp:406] pool3 <- conv3
I0509 13:42:20.979262 114493 net.cpp:380] pool3 -> pool3
I0509 13:42:20.979269 114493 net.cpp:122] Setting up pool3
I0509 13:42:20.979271 114493 net.cpp:129] Top shape: 1 64 4 4 (1024)
I0509 13:42:20.979274 114493 net.cpp:137] Memory required for data: 319488
I0509 13:42:20.979276 114493 layer_factory.hpp:77] Creating layer ip1
I0509 13:42:20.979282 114493 net.cpp:84] Creating Layer ip1
I0509 13:42:20.979285 114493 net.cpp:406] ip1 <- pool3
I0509 13:42:20.979290 114493 net.cpp:380] ip1 -> ip1
I0509 13:42:20.979403 114493 net.cpp:122] Setting up ip1
I0509 13:42:20.979408 114493 net.cpp:129] Top shape: 1 64 (64)
I0509 13:42:20.979411 114493 net.cpp:137] Memory required for data: 319744
I0509 13:42:20.979415 114493 layer_factory.hpp:77] Creating layer ip2
I0509 13:42:20.979420 114493 net.cpp:84] Creating Layer ip2
I0509 13:42:20.979423 114493 net.cpp:406] ip2 <- ip1
I0509 13:42:20.979427 114493 net.cpp:380] ip2 -> ip2
I0509 13:42:20.979437 114493 net.cpp:122] Setting up ip2
I0509 13:42:20.979444 114493 net.cpp:129] Top shape: 1 10 (10)
I0509 13:42:20.979447 114493 net.cpp:137] Memory required for data: 319784
I0509 13:42:20.979454 114493 layer_factory.hpp:77] Creating layer prob
I0509 13:42:20.979457 114493 net.cpp:84] Creating Layer prob
I0509 13:42:20.979460 114493 net.cpp:406] prob <- ip2
I0509 13:42:20.979465 114493 net.cpp:380] prob -> prob
I0509 13:42:20.979470 114493 net.cpp:122] Setting up prob
I0509 13:42:20.979475 114493 net.cpp:129] Top shape: 1 10 (10)
I0509 13:42:20.979476 114493 net.cpp:137] Memory required for data: 319824
I0509 13:42:20.979480 114493 net.cpp:200] prob does not need backward computation.
I0509 13:42:20.979482 114493 net.cpp:200] ip2 does not need backward computation.
I0509 13:42:20.979485 114493 net.cpp:200] ip1 does not need backward computation.
I0509 13:42:20.979488 114493 net.cpp:200] pool3 does not need backward computation.
I0509 13:42:20.979491 114493 net.cpp:200] relu3 does not need backward computation.
I0509 13:42:20.979495 114493 net.cpp:200] conv3 does not need backward computation.
I0509 13:42:20.979496 114493 net.cpp:200] pool2 does not need backward computation.
I0509 13:42:20.979499 114493 net.cpp:200] relu2 does not need backward computation.
I0509 13:42:20.979502 114493 net.cpp:200] conv2 does not need backward computation.
I0509 13:42:20.979506 114493 net.cpp:200] relu1 does not need backward computation.
I0509 13:42:20.979507 114493 net.cpp:200] pool1 does not need backward computation.
I0509 13:42:20.979511 114493 net.cpp:200] conv1 does not need backward computation.
I0509 13:42:20.979513 114493 net.cpp:200] data does not need backward computation.
I0509 13:42:20.979516 114493 net.cpp:242] This network produces output prob
I0509 13:42:20.979523 114493 net.cpp:255] Network initialization done.
I0509 13:42:20.980386 114493 net.cpp:798] Ignoring source layer cifar
I0509 13:42:20.980465 114493 hdf5.cpp:32] Datatype class: H5T_FLOAT
F0509 13:42:20.980475 114493 hdf5.cpp:79] Check failed: blob_dims == blob->shape() Cannot load blob from hdf5; shape mismatch. Source shape is 32 1 5 5 (800) target shape is 32 3 5 5 (2400)
*** Check failure stack trace: ***
     0.628146158             13,250      r02c0:u                  
     0.638261840      <not counted>      r02c0:u                  
     0.648372135      <not counted>      r02c0:u                  
     0.658482699      <not counted>      r02c0:u                  
     0.668595837      <not counted>      r02c0:u                  
     0.678708525      <not counted>      r02c0:u                  
     0.688823221      <not counted>      r02c0:u                  
     0.698937623      <not counted>      r02c0:u                  
     0.709048207      <not counted>      r02c0:u                  
     0.719163723      <not counted>      r02c0:u                  
     0.729277197      <not counted>      r02c0:u                  
     0.739389882      <not counted>      r02c0:u                  
     0.749505353      <not counted>      r02c0:u                  
     0.759619380      <not counted>      r02c0:u                  
#           time             counts unit events
     0.768789193                  0      r02c0:u                  
python: Aborted
