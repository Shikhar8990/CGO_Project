#           time             counts unit events
     0.100395289        206,974,876      instructions:u           
     0.100395289        261,546,728      cycles:u                 
     0.200603898        363,135,915      instructions:u           
     0.200603898        414,928,001      cycles:u                 
     0.300757224        399,367,828      instructions:u           
     0.300757224        245,796,992      cycles:u                 
     0.400926131        335,503,161      instructions:u           
     0.400926131        237,996,057      cycles:u                 
     0.501111824        463,976,624      instructions:u           
     0.501111824        259,532,340      cycles:u                 
     0.601272926        439,232,523      instructions:u           
     0.601272926        231,662,961      cycles:u                 
WARNING: Logging before InitGoogleLogging() is written to STDERR
W0509 19:56:29.372817 122615 _caffe.cpp:139] DEPRECATION WARNING - deprecated use of Python interface
W0509 19:56:29.372839 122615 _caffe.cpp:140] Use this instead (with the named "weights" parameter):
W0509 19:56:29.372843 122615 _caffe.cpp:142] Net('models/bvlc_reference_caffenet/deploy.prototxt', 1, weights='models/bvlc_reference_caffenet/caffenet_train_iter_27.caffemodel')
I0509 19:56:29.374194 122615 net.cpp:51] Initializing net from parameters: 
name: "CaffeNet"
state {
  phase: TEST
  level: 0
}
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 10
      dim: 3
      dim: 227
      dim: 227
    }
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  inner_product_param {
    num_output: 1000
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8"
  top: "prob"
}
I0509 19:56:29.374261 122615 layer_factory.hpp:77] Creating layer data
I0509 19:56:29.374271 122615 net.cpp:84] Creating Layer data
I0509 19:56:29.374277 122615 net.cpp:380] data -> data
I0509 19:56:29.374289 122615 net.cpp:122] Setting up data
I0509 19:56:29.374295 122615 net.cpp:129] Top shape: 10 3 227 227 (1545870)
I0509 19:56:29.374299 122615 net.cpp:137] Memory required for data: 6183480
I0509 19:56:29.374301 122615 layer_factory.hpp:77] Creating layer conv1
I0509 19:56:29.374307 122615 net.cpp:84] Creating Layer conv1
I0509 19:56:29.374310 122615 net.cpp:406] conv1 <- data
I0509 19:56:29.374315 122615 net.cpp:380] conv1 -> conv1
I0509 19:56:29.374325 122615 base_conv_layer.cpp:121] Group is 1channel is3number of output is 96
I0509 19:56:29.374393 122615 net.cpp:122] Setting up conv1
I0509 19:56:29.374399 122615 net.cpp:129] Top shape: 10 96 55 55 (2904000)
I0509 19:56:29.374402 122615 net.cpp:137] Memory required for data: 17799480
I0509 19:56:29.374410 122615 layer_factory.hpp:77] Creating layer relu1
I0509 19:56:29.374415 122615 net.cpp:84] Creating Layer relu1
I0509 19:56:29.374418 122615 net.cpp:406] relu1 <- conv1
I0509 19:56:29.374423 122615 net.cpp:367] relu1 -> conv1 (in-place)
I0509 19:56:29.374428 122615 net.cpp:122] Setting up relu1
I0509 19:56:29.374430 122615 net.cpp:129] Top shape: 10 96 55 55 (2904000)
I0509 19:56:29.374433 122615 net.cpp:137] Memory required for data: 29415480
I0509 19:56:29.374435 122615 layer_factory.hpp:77] Creating layer pool1
I0509 19:56:29.374439 122615 net.cpp:84] Creating Layer pool1
I0509 19:56:29.374442 122615 net.cpp:406] pool1 <- conv1
I0509 19:56:29.374445 122615 net.cpp:380] pool1 -> pool1
I0509 19:56:29.374454 122615 net.cpp:122] Setting up pool1
I0509 19:56:29.374457 122615 net.cpp:129] Top shape: 10 96 27 27 (699840)
I0509 19:56:29.374459 122615 net.cpp:137] Memory required for data: 32214840
I0509 19:56:29.374461 122615 layer_factory.hpp:77] Creating layer norm1
I0509 19:56:29.374466 122615 net.cpp:84] Creating Layer norm1
I0509 19:56:29.374469 122615 net.cpp:406] norm1 <- pool1
I0509 19:56:29.374472 122615 net.cpp:380] norm1 -> norm1
I0509 19:56:29.374478 122615 net.cpp:122] Setting up norm1
I0509 19:56:29.374482 122615 net.cpp:129] Top shape: 10 96 27 27 (699840)
I0509 19:56:29.374485 122615 net.cpp:137] Memory required for data: 35014200
I0509 19:56:29.374486 122615 layer_factory.hpp:77] Creating layer conv2
I0509 19:56:29.374491 122615 net.cpp:84] Creating Layer conv2
I0509 19:56:29.374495 122615 net.cpp:406] conv2 <- norm1
I0509 19:56:29.374497 122615 net.cpp:380] conv2 -> conv2
I0509 19:56:29.374505 122615 base_conv_layer.cpp:121] Group is 2channel is96number of output is 256
I0509 19:56:29.374917 122615 net.cpp:122] Setting up conv2
I0509 19:56:29.374922 122615 net.cpp:129] Top shape: 10 256 27 27 (1866240)
I0509 19:56:29.374924 122615 net.cpp:137] Memory required for data: 42479160
I0509 19:56:29.374930 122615 layer_factory.hpp:77] Creating layer relu2
I0509 19:56:29.374934 122615 net.cpp:84] Creating Layer relu2
I0509 19:56:29.374938 122615 net.cpp:406] relu2 <- conv2
I0509 19:56:29.374941 122615 net.cpp:367] relu2 -> conv2 (in-place)
I0509 19:56:29.374945 122615 net.cpp:122] Setting up relu2
I0509 19:56:29.374948 122615 net.cpp:129] Top shape: 10 256 27 27 (1866240)
I0509 19:56:29.374951 122615 net.cpp:137] Memory required for data: 49944120
I0509 19:56:29.374953 122615 layer_factory.hpp:77] Creating layer pool2
I0509 19:56:29.374956 122615 net.cpp:84] Creating Layer pool2
I0509 19:56:29.374959 122615 net.cpp:406] pool2 <- conv2
I0509 19:56:29.374963 122615 net.cpp:380] pool2 -> pool2
I0509 19:56:29.374969 122615 net.cpp:122] Setting up pool2
I0509 19:56:29.374971 122615 net.cpp:129] Top shape: 10 256 13 13 (432640)
I0509 19:56:29.374974 122615 net.cpp:137] Memory required for data: 51674680
I0509 19:56:29.374976 122615 layer_factory.hpp:77] Creating layer norm2
I0509 19:56:29.374986 122615 net.cpp:84] Creating Layer norm2
I0509 19:56:29.374989 122615 net.cpp:406] norm2 <- pool2
I0509 19:56:29.374994 122615 net.cpp:380] norm2 -> norm2
I0509 19:56:29.374999 122615 net.cpp:122] Setting up norm2
I0509 19:56:29.375002 122615 net.cpp:129] Top shape: 10 256 13 13 (432640)
I0509 19:56:29.375005 122615 net.cpp:137] Memory required for data: 53405240
I0509 19:56:29.375007 122615 layer_factory.hpp:77] Creating layer conv3
I0509 19:56:29.375012 122615 net.cpp:84] Creating Layer conv3
I0509 19:56:29.375015 122615 net.cpp:406] conv3 <- norm2
I0509 19:56:29.375018 122615 net.cpp:380] conv3 -> conv3
I0509 19:56:29.375025 122615 base_conv_layer.cpp:121] Group is 1channel is256number of output is 384
I0509 19:56:29.376233 122615 net.cpp:122] Setting up conv3
I0509 19:56:29.376240 122615 net.cpp:129] Top shape: 10 384 13 13 (648960)
I0509 19:56:29.376243 122615 net.cpp:137] Memory required for data: 56001080
I0509 19:56:29.376250 122615 layer_factory.hpp:77] Creating layer relu3
I0509 19:56:29.376255 122615 net.cpp:84] Creating Layer relu3
I0509 19:56:29.376258 122615 net.cpp:406] relu3 <- conv3
I0509 19:56:29.376262 122615 net.cpp:367] relu3 -> conv3 (in-place)
I0509 19:56:29.376266 122615 net.cpp:122] Setting up relu3
I0509 19:56:29.376271 122615 net.cpp:129] Top shape: 10 384 13 13 (648960)
I0509 19:56:29.376273 122615 net.cpp:137] Memory required for data: 58596920
I0509 19:56:29.376276 122615 layer_factory.hpp:77] Creating layer conv4
I0509 19:56:29.376282 122615 net.cpp:84] Creating Layer conv4
I0509 19:56:29.376286 122615 net.cpp:406] conv4 <- conv3
I0509 19:56:29.376289 122615 net.cpp:380] conv4 -> conv4
I0509 19:56:29.376297 122615 base_conv_layer.cpp:121] Group is 2channel is384number of output is 384
I0509 19:56:29.376898 122615 net.cpp:122] Setting up conv4
I0509 19:56:29.376904 122615 net.cpp:129] Top shape: 10 384 13 13 (648960)
I0509 19:56:29.376906 122615 net.cpp:137] Memory required for data: 61192760
I0509 19:56:29.376911 122615 layer_factory.hpp:77] Creating layer relu4
I0509 19:56:29.376915 122615 net.cpp:84] Creating Layer relu4
I0509 19:56:29.376917 122615 net.cpp:406] relu4 <- conv4
I0509 19:56:29.376922 122615 net.cpp:367] relu4 -> conv4 (in-place)
I0509 19:56:29.376926 122615 net.cpp:122] Setting up relu4
I0509 19:56:29.376930 122615 net.cpp:129] Top shape: 10 384 13 13 (648960)
I0509 19:56:29.376934 122615 net.cpp:137] Memory required for data: 63788600
I0509 19:56:29.376935 122615 layer_factory.hpp:77] Creating layer conv5
I0509 19:56:29.376940 122615 net.cpp:84] Creating Layer conv5
I0509 19:56:29.376941 122615 net.cpp:406] conv5 <- conv4
I0509 19:56:29.376946 122615 net.cpp:380] conv5 -> conv5
I0509 19:56:29.376952 122615 base_conv_layer.cpp:121] Group is 2channel is384number of output is 256
I0509 19:56:29.377544 122615 net.cpp:122] Setting up conv5
I0509 19:56:29.377549 122615 net.cpp:129] Top shape: 10 256 13 13 (432640)
I0509 19:56:29.377552 122615 net.cpp:137] Memory required for data: 65519160
I0509 19:56:29.377559 122615 layer_factory.hpp:77] Creating layer relu5
I0509 19:56:29.377563 122615 net.cpp:84] Creating Layer relu5
I0509 19:56:29.377566 122615 net.cpp:406] relu5 <- conv5
I0509 19:56:29.377570 122615 net.cpp:367] relu5 -> conv5 (in-place)
I0509 19:56:29.377574 122615 net.cpp:122] Setting up relu5
I0509 19:56:29.377578 122615 net.cpp:129] Top shape: 10 256 13 13 (432640)
I0509 19:56:29.377579 122615 net.cpp:137] Memory required for data: 67249720
I0509 19:56:29.377583 122615 layer_factory.hpp:77] Creating layer pool5
I0509 19:56:29.377588 122615 net.cpp:84] Creating Layer pool5
I0509 19:56:29.377589 122615 net.cpp:406] pool5 <- conv5
I0509 19:56:29.377593 122615 net.cpp:380] pool5 -> pool5
I0509 19:56:29.377599 122615 net.cpp:122] Setting up pool5
I0509 19:56:29.377602 122615 net.cpp:129] Top shape: 10 256 6 6 (92160)
I0509 19:56:29.377604 122615 net.cpp:137] Memory required for data: 67618360
I0509 19:56:29.377607 122615 layer_factory.hpp:77] Creating layer fc6
I0509 19:56:29.377614 122615 net.cpp:84] Creating Layer fc6
I0509 19:56:29.377616 122615 net.cpp:406] fc6 <- pool5
I0509 19:56:29.377624 122615 net.cpp:380] fc6 -> fc6
I0509 19:56:29.405750 122615 net.cpp:122] Setting up fc6
I0509 19:56:29.405773 122615 net.cpp:129] Top shape: 10 4096 (40960)
I0509 19:56:29.405776 122615 net.cpp:137] Memory required for data: 67782200
I0509 19:56:29.405784 122615 layer_factory.hpp:77] Creating layer relu6
I0509 19:56:29.405792 122615 net.cpp:84] Creating Layer relu6
I0509 19:56:29.405797 122615 net.cpp:406] relu6 <- fc6
I0509 19:56:29.405803 122615 net.cpp:367] relu6 -> fc6 (in-place)
I0509 19:56:29.405809 122615 net.cpp:122] Setting up relu6
I0509 19:56:29.405813 122615 net.cpp:129] Top shape: 10 4096 (40960)
I0509 19:56:29.405815 122615 net.cpp:137] Memory required for data: 67946040
I0509 19:56:29.405818 122615 layer_factory.hpp:77] Creating layer drop6
I0509 19:56:29.405823 122615 net.cpp:84] Creating Layer drop6
I0509 19:56:29.405825 122615 net.cpp:406] drop6 <- fc6
I0509 19:56:29.405829 122615 net.cpp:367] drop6 -> fc6 (in-place)
I0509 19:56:29.405835 122615 net.cpp:122] Setting up drop6
I0509 19:56:29.405838 122615 net.cpp:129] Top shape: 10 4096 (40960)
I0509 19:56:29.405840 122615 net.cpp:137] Memory required for data: 68109880
I0509 19:56:29.405843 122615 layer_factory.hpp:77] Creating layer fc7
I0509 19:56:29.405848 122615 net.cpp:84] Creating Layer fc7
I0509 19:56:29.405850 122615 net.cpp:406] fc7 <- fc6
I0509 19:56:29.405854 122615 net.cpp:380] fc7 -> fc7
I0509 19:56:29.418226 122615 net.cpp:122] Setting up fc7
I0509 19:56:29.418244 122615 net.cpp:129] Top shape: 10 4096 (40960)
I0509 19:56:29.418246 122615 net.cpp:137] Memory required for data: 68273720
I0509 19:56:29.418254 122615 layer_factory.hpp:77] Creating layer relu7
I0509 19:56:29.418262 122615 net.cpp:84] Creating Layer relu7
I0509 19:56:29.418267 122615 net.cpp:406] relu7 <- fc7
I0509 19:56:29.418272 122615 net.cpp:367] relu7 -> fc7 (in-place)
I0509 19:56:29.418277 122615 net.cpp:122] Setting up relu7
I0509 19:56:29.418280 122615 net.cpp:129] Top shape: 10 4096 (40960)
I0509 19:56:29.418282 122615 net.cpp:137] Memory required for data: 68437560
I0509 19:56:29.418285 122615 layer_factory.hpp:77] Creating layer drop7
I0509 19:56:29.418289 122615 net.cpp:84] Creating Layer drop7
I0509 19:56:29.418292 122615 net.cpp:406] drop7 <- fc7
I0509 19:56:29.418296 122615 net.cpp:367] drop7 -> fc7 (in-place)
I0509 19:56:29.418303 122615 net.cpp:122] Setting up drop7
I0509 19:56:29.418305 122615 net.cpp:129] Top shape: 10 4096 (40960)
I0509 19:56:29.418308 122615 net.cpp:137] Memory required for data: 68601400
I0509 19:56:29.418310 122615 layer_factory.hpp:77] Creating layer fc8
I0509 19:56:29.418314 122615 net.cpp:84] Creating Layer fc8
I0509 19:56:29.418318 122615 net.cpp:406] fc8 <- fc7
I0509 19:56:29.418321 122615 net.cpp:380] fc8 -> fc8
I0509 19:56:29.421813 122615 net.cpp:122] Setting up fc8
I0509 19:56:29.421820 122615 net.cpp:129] Top shape: 10 1000 (10000)
I0509 19:56:29.421823 122615 net.cpp:137] Memory required for data: 68641400
I0509 19:56:29.421828 122615 layer_factory.hpp:77] Creating layer prob
I0509 19:56:29.421833 122615 net.cpp:84] Creating Layer prob
I0509 19:56:29.421835 122615 net.cpp:406] prob <- fc8
I0509 19:56:29.421840 122615 net.cpp:380] prob -> prob
I0509 19:56:29.421850 122615 net.cpp:122] Setting up prob
I0509 19:56:29.421854 122615 net.cpp:129] Top shape: 10 1000 (10000)
I0509 19:56:29.421855 122615 net.cpp:137] Memory required for data: 68681400
I0509 19:56:29.421859 122615 net.cpp:200] prob does not need backward computation.
I0509 19:56:29.421861 122615 net.cpp:200] fc8 does not need backward computation.
I0509 19:56:29.421864 122615 net.cpp:200] drop7 does not need backward computation.
I0509 19:56:29.421866 122615 net.cpp:200] relu7 does not need backward computation.
I0509 19:56:29.421869 122615 net.cpp:200] fc7 does not need backward computation.
I0509 19:56:29.421872 122615 net.cpp:200] drop6 does not need backward computation.
I0509 19:56:29.421875 122615 net.cpp:200] relu6 does not need backward computation.
I0509 19:56:29.421877 122615 net.cpp:200] fc6 does not need backward computation.
I0509 19:56:29.421886 122615 net.cpp:200] pool5 does not need backward computation.
I0509 19:56:29.421890 122615 net.cpp:200] relu5 does not need backward computation.
I0509 19:56:29.421893 122615 net.cpp:200] conv5 does not need backward computation.
I0509 19:56:29.421895 122615 net.cpp:200] relu4 does not need backward computation.
I0509 19:56:29.421900 122615 net.cpp:200] conv4 does not need backward computation.
I0509 19:56:29.421902 122615 net.cpp:200] relu3 does not need backward computation.
I0509 19:56:29.421905 122615 net.cpp:200] conv3 does not need backward computation.
I0509 19:56:29.421908 122615 net.cpp:200] norm2 does not need backward computation.
I0509 19:56:29.421911 122615 net.cpp:200] pool2 does not need backward computation.
I0509 19:56:29.421914 122615 net.cpp:200] relu2 does not need backward computation.
I0509 19:56:29.421918 122615 net.cpp:200] conv2 does not need backward computation.
I0509 19:56:29.421921 122615 net.cpp:200] norm1 does not need backward computation.
I0509 19:56:29.421924 122615 net.cpp:200] pool1 does not need backward computation.
I0509 19:56:29.421927 122615 net.cpp:200] relu1 does not need backward computation.
I0509 19:56:29.421931 122615 net.cpp:200] conv1 does not need backward computation.
I0509 19:56:29.421933 122615 net.cpp:200] data does not need backward computation.
I0509 19:56:29.421936 122615 net.cpp:242] This network produces output prob
I0509 19:56:29.421947 122615 net.cpp:255] Network initialization done.
     0.701453469        478,173,098      instructions:u           
     0.701453469        173,259,068      cycles:u                 
     0.801617191        273,714,767      instructions:u           
     0.801617191        166,453,390      cycles:u                 
I0509 19:56:29.573941 122615 net.cpp:744] Ignoring source layer loss
Traceback (most recent call last):
  File "test_model.py", line 32, in <module>
    out = net.forward_all(data=np.asarray([img.transpose(2,0,1)]))
  File "/home/data0/shikhar/caffe/caffe/python/caffe/pycaffe.py", line 202, in _Net_forward_all
    outs = self.forward(blobs=blobs, **batch)
  File "/home/data0/shikhar/caffe/caffe/python/caffe/pycaffe.py", line 129, in _Net_forward
    self.blobs[in_].data[...] = blob
ValueError: could not broadcast input array from shape (10,1,28,28) into shape (10,3,227,227)
     0.866117218        194,510,947      instructions:u           
     0.866117218        148,808,293      cycles:u                 
